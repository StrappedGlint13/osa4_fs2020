{"version":3,"sources":["components/Blog.js","services/blogService.js","services/loginService.js","components/BlogForm.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","BlogForm","props","onSubmit","addBlog","value","newTitle","onChange","handleTitleChange","newAuthor","handleAuthorChange","newUrl","handleUrlChange","type","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","setNewTitle","setNewAuthor","setNewUrl","setErrorMessage","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","name","target","onClick","removeItem","blogObject","url","res","concat","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f33fdcd5.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author} \r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {  token = `bearer ${newToken}`}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const config = {    \n    headers: { Authorization: token },  \n}\n  const response = await axios.post(baseUrl, newObject, config)  \n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst BlogForm = (props) =>\n<form onSubmit={props.addBlog}>\n<div>\n  title: <input value={props.newTitle}\n  onChange={props.handleTitleChange} />\n</div>\n<div>\n  author: <input value={props.newAuthor}\n  onChange={props.handleAuthorChange} />\n</div>\n<div>\n<div>\n  url: <input value={props.newUrl}\n  onChange={props.handleUrlChange} />\n</div>\n<div></div>\n  <button type=\"submit\">create</button>\n</div>\n</form>\n\nexport default BlogForm","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogService'\nimport loginService from './services/loginService'\nimport BlogForm from './components/BlogForm'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')   \n  const [password, setPassword] = useState('') \n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {    \n    const loggedUserJSON = window.localStorage.getItem('loggedUser')    \n  if (loggedUserJSON) {      \n    const user = JSON.parse(loggedUserJSON)      \n    setUser(user)      \n    blogService.setToken(user.token)    \n  }  \n}, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    }\n\n    blogService\n    .create(blogObject)\n    .then(res => {\n      setBlogs(blogs.concat(res))\n      setNewTitle('')\n      setNewAuthor('')\n      setNewUrl('')\n    })\n  }\n\n  const handleLogin = async (event) => {    \n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(        \n        'loggedUser', JSON.stringify(user)      ) \n\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const handleLogout = (event) => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  if (user === null) {\n      return (\n        <div>\n          <h2>Log in to application</h2>\n          <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>      \n        </div>\n      )\n    }\n\n     \n  return (\n    <div>\n      <h2>blogs</h2>\n      {user.name} logged in\n      <button onClick={()=>handleLogout()}>logout</button> \n      <br></br><br></br>\n      <h2>create new</h2>\n      <BlogForm addBlog={addBlog} newTitle={newTitle} \n      newAuthor={newAuthor} newUrl={newUrl} handleTitleChange={handleTitleChange}\n      handleAuthorChange={handleAuthorChange} handleUrlChange={handleUrlChange} />\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}