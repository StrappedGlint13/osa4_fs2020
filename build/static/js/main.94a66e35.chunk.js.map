{"version":3,"sources":["components/Togglable.js","components/Blog.js","services/blogService.js","services/loginService.js","components/BlogForm.js","components/Notification.js","components/Error.js.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","className","children","displayName","Blog","blog","user","addLike","removeBlog","paddingTop","paddingLeft","border","borderWidth","marginBottom","id","title","author","url","likes","username","token","getAll","axios","get","then","response","data","create","newObject","a","post","update","put","remove","delete","setToken","newToken","headers","Authorization","login","credentials","BlogForm","addBlog","handleAuthorChange","handleTitleChange","handleUrlChange","newTitle","newAuthor","newUrl","onSubmit","value","onChange","type","Notification","message","console","log","Error","error","App","blogs","setBlogs","setUsername","password","setPassword","setNewTitle","setNewAuthor","setNewUrl","blogFormRef","useRef","setMessage","setError","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","name","target","confirm","filter","removeItem","blogObject","current","res","concat","sort","b","map","key","find","n","changedBlog","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94a66e35.chunk.js","sourcesContent":["\nimport React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <br></br>\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\nimport Togglable from './Togglable'\n\nconst Blog = ({ blog, user, addLike, removeBlog }) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n\n  return (\n    <li className='blog'>\n    <div style={blogStyle}>\n      <div>\n        <p id='title'>title: {blog.title}</p> \n        <p id='author'>author: {blog.author}</p>\n        <Togglable buttonLabel=\"view\" >\n          <p id='url'> url: {blog.url}</p>\n          <br></br>\n      <p id='likes'> likes: {blog.likes} <button onClick={addLike}> like</button> </p>      \n          <br></br>\n          <p id='user'> user: {user.username} </p>\n          <button onClick={removeBlog}>remove</button>\n        </Togglable>\n      </div>\n    </div>\n    </li>\n  )}\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = { headers: { Authorization: `bearer ${newToken}` } }\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject, token)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject, token)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, token)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({\n  addBlog,\n  handleAuthorChange,\n  handleTitleChange,\n  handleUrlChange,\n  newTitle,\n  newAuthor,\n  newUrl,\n}) =>\n  <form onSubmit={addBlog}>\n    <div>\n  title: <input id={'title'} value={newTitle}\n        onChange={handleTitleChange} />\n    </div>\n    <div>\n  author: <input id={'author'} value={newAuthor}\n        onChange={handleAuthorChange} />\n    </div>\n    <div>\n      <div>\n  url: <input id={'url'} value={newUrl}\n          onChange={handleUrlChange} />\n      </div>\n      <div></div>\n      <button id={'create-button'} type=\"submit\">create</button>\n    </div>\n  </form>\n\n\nBlogForm.propTypes= {\n  addBlog: PropTypes.func.isRequired,\n  handleAuthorChange: PropTypes.func.isRequired,\n  handleTitleChange: PropTypes.func.isRequired,\n  handleUrlChange: PropTypes.func.isRequired,\n  newTitle: PropTypes.string.isRequired,\n  newAuthor: PropTypes.string.isRequired,\n  newUrl: PropTypes.string.isRequired,\n}\n\nexport default BlogForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  console.log(message)\n  return (\n    <div className=\"message\">\n      {message}\n    </div>\n  )\n}\n\n\nexport default Notification","import React from 'react'\n\nconst Error = ({ error }) => {\n  if (error === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {error}\n    </div>\n  )\n}\n\n\nexport default Error","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogService'\nimport loginService from './services/loginService'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Error from './components/Error.js'\nimport './App.css'\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n  const blogFormRef= useRef()\n\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: 0\n    }\n\n    blogFormRef.current.toggleVisibility()\n\n    blogService\n      .create(blogObject)\n\n\n      .then(res => {\n        setBlogs(blogs.concat(res))\n        setNewTitle('')\n        setNewAuthor('')\n        setNewUrl('')\n        setMessage(`a new blog '${blogObject.title}' added`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)      )\n\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setMessage(`Welcome ${user.username}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setError('invalid username or password')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addLike = (id) => {\n      const blog = blogs.find(n => n.id === id)\n      const changedBlog = { ...blog, likes: blog.likes + 1 }\n\n      blogService.update(changedBlog.id, changedBlog)\n        .then(response => {\n          setBlogs(blogs.map(blog => blog.id !== id ? blog : response))\n        })\n        .catch(error => {\n          setError('adding like failed')\n        })\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n\n  }\n  \n\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <Error error={error} />\n        <h2>Log in to application</h2>\n        <form onSubmit={handleLogin}>\n          <div>\n          username\n            <input\n              id='username'\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n          password\n            <input\n              id='password'\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button id=\"login-button\" type=\"submit\">login</button>\n        </form>\n      </div>\n    )\n  }\n\n  const SortedBlogs = () => {\n    const sorts = blogs.sort((a,b) => b.likes - a.likes).map(blog =>\n      <Blog key={blog.id} blog={blog} user={user} addLike={() => addLike(blog.id)}\n        removeBlog={() => removeBlog(blog)} />\n    )\n\n    return (\n      sorts\n    )\n  }\n\n  const removeBlog = async (blog) => {\n    if (window.confirm(`Remove blog ${blog.title}?`))\n      try {\n        blogService.setToken(user.token)\n        setUser(user)\n        await blogService.remove(blog.id)\n        setMessage(`${blog.title} deleted`)\n        setBlogs(blogs.filter(a => a.id !== blog.id))\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      } catch (error) {\n        setError('Delete failed')\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n\n      }\n\n  }\n\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} />\n      {user.name} logged in\n      <button onClick={() => handleLogout()}>logout</button>\n      <br></br>\n      <h2>create new</h2>\n      <Togglable buttonLabel='new note' ref={blogFormRef}>\n        <BlogForm addBlog={addBlog} newTitle={newTitle}\n          newAuthor={newAuthor} newUrl={newUrl} handleTitleChange={handleTitleChange}\n          handleAuthorChange={handleAuthorChange} handleUrlChange={handleUrlChange} />\n      </Togglable>\n      <SortedBlogs/>\n    </div>\n\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}