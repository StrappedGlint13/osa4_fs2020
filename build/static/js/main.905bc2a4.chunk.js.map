{"version":3,"sources":["components/Togglable.js","components/Blog.js","services/blogService.js","services/loginService.js","components/BlogForm.js","components/Notification.js","components/Error.js.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","Blog","blog","addLike","removeBlog","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","url","likes","user","username","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","remove","delete","setToken","newToken","login","credentials","BlogForm","addBlog","handleAuthorChange","handleTitleChange","handleUrlChange","newTitle","newAuthor","newUrl","onSubmit","value","onChange","type","Notification","message","console","log","className","Error","error","App","blogs","setBlogs","setUsername","password","setPassword","setNewTitle","setNewAuthor","setNewUrl","blogFormRef","useRef","setMessage","setError","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","token","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","name","target","filter","removeItem","blogObject","current","res","concat","sort","b","map","key","find","n","changedBlog","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.905bc2a4.chunk.js","sourcesContent":["\nimport React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {    \n      return {      \n          toggleVisibility    \n        }  \n    })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import React from 'react'\r\nimport Togglable from './Togglable'\r\n\r\nconst Blog = ({ blog, addLike, removeBlog }) => {\r\n  const blogStyle = {\r\n  paddingTop: 10,\r\n  paddingLeft: 2,\r\n  border: 'solid',\r\n  borderWidth: 1,\r\n  marginBottom: 5\r\n}\r\n\r\nreturn (\r\n  <div style={blogStyle}>\r\n  <div>\r\n    {blog.title} {blog.author} \r\n    <Togglable buttonLabel=\"view\" >\r\n      {blog.url}\r\n      <br></br>\r\n      likes {blog.likes}\r\n      <button onClick={addLike}>like</button>\r\n      <br></br>\r\n      {blog.user.username}\r\n      <br></br>\r\n      <button onClick={removeBlog}>remove</button>\r\n    </Togglable>\r\n  </div>\r\n  </div>\r\n)}\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet config = null\n\nconst setToken = newToken => {\n  config = { headers: { Authorization: `bearer ${newToken}`} } \n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const config = {    \n    headers: { Authorization: config },  \n}\n  const response = await axios.post(baseUrl, newObject, config)  \n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst BlogForm = ({\n    addBlog,\n    handleAuthorChange,\n    handleTitleChange,\n    handleUrlChange,\n    newTitle,\n    newAuthor,\n    newUrl,\n    removeBlog\n}) =>\n<form onSubmit={addBlog}>\n<div>\n  title: <input value={newTitle}\n  onChange={handleTitleChange} />\n</div>\n<div>\n  author: <input value={newAuthor}\n  onChange={handleAuthorChange} />\n</div>\n<div>\n<div>\n  url: <input value={newUrl}\n  onChange={handleUrlChange} />\n</div>\n<div></div>\n  <button type=\"submit\">create</button>\n</div>\n</form>\n\nexport default BlogForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    console.log(message)\n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n\n\nexport default Notification","import React from 'react'\n\nconst Error = ({ error }) => {\n    if (error === null) {\n      return null\n    }\n\n    return (\n      <div className=\"error\">\n        {error}\n      </div>\n    )\n  }\n\n\nexport default Error","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogService'\nimport loginService from './services/loginService'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Error from './components/Error.js'\nimport './App.css'\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')   \n  const [password, setPassword] = useState('') \n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n  const blogFormRef= useRef()\n\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {    \n    const loggedUserJSON = window.localStorage.getItem('loggedUser')    \n  if (loggedUserJSON) {      \n    const user = JSON.parse(loggedUserJSON)      \n    setUser(user)      \n    blogService.setToken(user.token)    \n  }  \n}, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: 44\n    }\n\n    blogFormRef.current.toggleVisibility()\n\n    blogService\n    .create(blogObject)\n\n      \n    .then(res => {\n      setBlogs(blogs.concat(res))\n      setNewTitle('')\n      setNewAuthor('')\n      setNewUrl('')\n      setMessage(`a new blog '${blogObject.title}' added`)\n      setTimeout(()=> {\n        setMessage(null)\n      }, 5000)\n    })\n    \n  }\n\n  const handleLogin = async (event) => {    \n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(        \n        'loggedUser', JSON.stringify(user)      ) \n\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setMessage(`Welcome ${user.username}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setError('invalid username or password')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addLike = (id) => {\n    const blog = blogs.find(n => n.id === id)\n    const changedBlog = { ...blog, likes: blog.likes + 1}\n\n    blogService.update(changedBlog.id, changedBlog)\n    .then(response => {\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : response))\n    })\n    .catch(error => {\n      setError('adding like failed')\n    })\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n\n\n  }\n\n  \n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const handleLogout = (event) => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  if (user === null) {\n      return (\n        <div>\n          <Error error={error} />\n          <h2>Log in to application</h2>\n          <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>      \n        </div>\n      )\n    }\n\n  const SortedBlogs = () => {\n    const sorts = blogs.sort((a,b) => b.likes - a.likes).map(blog =>\n      <Blog key={blog.id} blog={blog} addLike={() => addLike(blog.id)}\n      removeBlog={() => removeBlog(blog.id)} />\n    )\n  \n    return (\n      sorts\n    )\n  }\n\n  const removeBlog = async (blog) => {\n    try {\n      blogService.setToken(user.token)\n      setUser(user)\n      await blogService.remove(blog)\n      setMessage(`${blog.title} deleted`)\n      setBlogs(blogs.filter(a => a.id !== blog.id))\n    } catch (error) {\n      setError(\"Delete failed\")\n    }\n   \n  }\n  \n    \n     \n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} />\n      {user.name} logged in\n      <button onClick={()=>handleLogout()}>logout</button> \n      <br></br>\n      <h2>create new</h2>\n      <Togglable buttonLabel='new note' ref={blogFormRef}>\n      <BlogForm addBlog={addBlog} newTitle={newTitle} \n      newAuthor={newAuthor} newUrl={newUrl} handleTitleChange={handleTitleChange}\n      handleAuthorChange={handleAuthorChange} handleUrlChange={handleUrlChange} />\n      </Togglable>\n      <SortedBlogs/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}