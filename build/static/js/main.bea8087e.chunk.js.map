{"version":3,"sources":["components/Blog.js","services/blogService.js","services/loginService.js","App.js","index.js"],"names":["Blog","blog","title","author","axios","get","then","response","data","newToken","login","credentials","a","post","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","setErrorMessage","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","token","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","onSubmit","type","value","name","onChange","target","onClick","removeItem","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"2OAOeA,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,6BACGA,EAAKC,MADR,IACgBD,EAAKE,S,gBCqBR,EAjBA,WAEb,OADgBC,IAAMC,IAPR,cAQCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAe5B,EAnBE,SAAAC,GAAoB,iBAAaA,ICGnC,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACWR,IAAMS,KAHf,aAG6BF,GAD/B,cACNJ,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCkGIM,EA/FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGgBJ,mBAAS,IAHzB,mBAGTK,EAHS,KAGCC,EAHD,OAKwBN,mBAAS,MALjC,mBAKKO,GALL,aAMQP,mBAAS,MANjB,mBAMTQ,EANS,KAMHC,EANG,KAQhBC,qBAAU,WACRC,IAAqBpB,MAAK,SAAAU,GAAK,OAC7BC,EAAUD,QAEX,IAEHS,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,cACrD,GAAIH,EAAgB,CAClB,IAAMJ,EAAOQ,KAAKC,MAAML,GACxBH,EAAQD,GACRG,EAAqBH,EAAKU,UAE3B,IAED,IAAMC,EAAW,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,6DAClBuB,EAAMC,iBADY,kBAGGC,EAAa3B,MAAM,CACpCQ,WAAUE,aAJI,OAGVG,EAHU,OAOhBK,OAAOC,aAAaS,QAClB,aAAcP,KAAKQ,UAAUhB,IAG/BG,EAAqBH,EAAKU,OAC1BT,EAAQD,GACRJ,EAAY,IACZE,EAAY,IAdI,kDAgBhBC,EAAgB,qBAChBkB,YAAW,WACTlB,EAAgB,QACf,KAnBa,0DAAH,sDA4Bf,OAAa,OAATC,EAEA,6BACE,qDACA,0BAAMkB,SAAUP,GAClB,wCAEI,2BACAQ,KAAK,OACLC,MAAOzB,EACP0B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB3B,EAAY2B,EAAOH,WAGjD,wCAEI,2BACAD,KAAK,WACLC,MAAOvB,EACPwB,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOH,WAGjD,4BAAQD,KAAK,UAAb,WAQJ,6BACE,qCACCnB,EAAKqB,KAFR,aAGE,6BACA,4BAAQG,QAAS,kBAvCnBnB,OAAOC,aAAamB,WAAW,mBAC/BxB,EAAQ,QAsCN,UACA,6BACCR,EAAMiC,KAAI,SAAAhD,GAAI,OACb,kBAAC,EAAD,CAAMiD,IAAKjD,EAAKkD,GAAIlD,KAAMA,SC3FlCmD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bea8087e.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {  token = `bearer ${newToken}`}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const config = {    \n    headers: { Authorization: token },  \n}\n  const response = await axios.post(baseUrl, newObject, config)  \n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogService'\nimport loginService from './services/loginService' \n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')   \n  const [password, setPassword] = useState('') \n\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {    \n    const loggedUserJSON = window.localStorage.getItem('loggedUser')    \n  if (loggedUserJSON) {      \n    const user = JSON.parse(loggedUserJSON)      \n    setUser(user)      \n    blogService.setToken(user.token)    \n  }  \n}, [])\n\n  const handleLogin = async (event) => {    \n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(        \n        'loggedUser', JSON.stringify(user)      ) \n\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = (event) => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n    if (user === null) {\n      return (\n        <div>\n          <h2>Log in to application</h2>\n          <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>      \n        </div>\n      )\n    }\n\n     \n  return (\n    <div>\n      <h2>blogs</h2>\n      {user.name} logged in\n      <br></br>\n      <button onClick={()=>handleLogout()}>logout</button> \n      <br></br>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}