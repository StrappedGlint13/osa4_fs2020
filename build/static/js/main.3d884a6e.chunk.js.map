{"version":3,"sources":["components/Blog.js","services/blogService.js","services/loginService.js","components/BlogForm.js","components/Notification.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","BlogForm","props","onSubmit","addBlog","value","newTitle","onChange","handleTitleChange","newAuthor","handleAuthorChange","newUrl","handleUrlChange","type","Notification","message","console","log","className","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","setNewTitle","setNewAuthor","setNewUrl","setMessage","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","name","target","onClick","removeItem","blogObject","url","res","concat","map","key","ReactDOM","render","document","getElementById"],"mappings":"gQAOeA,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,6BACGA,EAAKC,MADR,IACgBD,EAAKE,S,gBCAnBC,EAAQ,KAqBG,GAAEC,OAjBF,WAEb,OADgBC,IAAMC,IAPR,cAQCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAelBC,OAbb,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAIUE,IAAMW,KAdf,aAc6BL,EAAWE,GAJzC,cAIPL,EAJO,yBAKNA,EAASC,MALH,2CAAH,sDAaqBQ,OALlB,SAACC,EAAIP,GAElB,OADgBN,IAAMc,IAAN,UAnBF,aAmBE,aAA2BD,GAAMP,GAClCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGFW,SAnBxB,SAAAC,GAAelB,EAAK,iBAAakB,KCGnC,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAAX,EAAA,sEACWP,IAAMW,KAHf,aAG6BO,GAD/B,cACNf,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCmBIe,EApBE,SAACC,GAAD,OACjB,0BAAMC,SAAUD,EAAME,SACtB,uCACS,2BAAOC,MAAOH,EAAMI,SAC3BC,SAAUL,EAAMM,qBAElB,wCACU,2BAAOH,MAAOH,EAAMO,UAC5BF,SAAUL,EAAMQ,sBAElB,6BACA,qCACO,2BAAOL,MAAOH,EAAMS,OACzBJ,SAAUL,EAAMU,mBAElB,8BACE,4BAAQC,KAAK,UAAb,aCHaC,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,MAETC,QAAQC,IAAIF,GAEV,yBAAKG,UAAU,WACZH,KC2IMI,G,MA3IH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGgBJ,mBAAS,IAHzB,mBAGTK,EAHS,KAGCC,EAHD,OAIgBN,mBAAS,IAJzB,mBAITd,EAJS,KAICqB,EAJD,OAKkBP,mBAAS,IAL3B,mBAKTX,EALS,KAKEmB,EALF,OAMYR,mBAAS,IANrB,mBAMTT,EANS,KAMDkB,EANC,OAQcT,mBAAS,wBARvB,mBAQTL,EARS,KAQAe,EARA,OASQV,mBAAS,MATjB,mBASTW,EATS,KASHC,EATG,KAWhBC,qBAAU,WACRC,EAAYrD,SAASG,MAAK,SAAAqC,GAAK,OAC7BC,EAAUD,QAEX,IAEHY,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,cACrD,GAAIH,EAAgB,CAClB,IAAMJ,EAAOQ,KAAKC,MAAML,GACxBH,EAAQD,GACRG,EAAYrC,SAASkC,EAAKnD,UAE3B,IAED,IAyBM6D,EAAW,uCAAG,WAAOC,GAAP,eAAArD,EAAA,6DAClBqD,EAAMC,iBADY,kBAGGC,EAAa7C,MAAM,CACpCwB,WAAUE,aAJI,OAGVM,EAHU,OAOhBK,OAAOC,aAAaQ,QAClB,aAAcN,KAAKO,UAAUf,IAG/BG,EAAYrC,SAASkC,EAAKnD,OAC1BoD,EAAQD,GACRP,EAAY,IACZE,EAAY,IAdI,kDAgBhBI,EAAW,qBACXiB,YAAW,WACTjB,EAAW,QACV,KAnBa,0DAAH,sDAwCjB,OAAa,OAATC,EAEE,6BACE,qDACA,0BAAM5B,SAAUsC,GAClB,wCAEI,2BACA5B,KAAK,OACLR,MAAOkB,EACPyB,KAAK,WACLzC,SAAU,gBAAG0C,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAO5C,WAGjD,wCAEI,2BACAQ,KAAK,WACLR,MAAOoB,EACPuB,KAAK,WACLzC,SAAU,gBAAG0C,EAAH,EAAGA,OAAH,OAAgBvB,EAAYuB,EAAO5C,WAGjD,4BAAQQ,KAAK,UAAb,WAQJ,6BACE,qCACA,kBAAC,EAAD,CAAcE,QAASA,IACtBgB,EAAKiB,KAHR,aAIE,4BAAQE,QAAS,kBAvCnBd,OAAOC,aAAac,WAAW,mBAC/BnB,EAAQ,QAsCN,UACA,6BAAS,6BACT,0CACA,kBAAC,EAAD,CAAU5B,QAvGE,SAACsC,GACfA,EAAMC,iBACN,IAAMS,EAAa,CACjB1E,MAAO4B,EACP3B,OAAQ8B,EACR4C,IAAK1C,GAGPuB,EACC/C,OAAOiE,GAGPpE,MAAK,SAAAsE,GACJhC,EAASD,EAAMkC,OAAOD,IACtB3B,EAAY,IACZC,EAAa,IACbC,EAAU,IACVC,EAAW,eAAD,OAAgBsB,EAAW1E,MAA3B,YACVqE,YAAW,WACTjB,EAAW,QACV,SAmFyBxB,SAAUA,EACtCG,UAAWA,EAAWE,OAAQA,EAAQH,kBAxDhB,SAACkC,GACzBf,EAAYe,EAAMO,OAAO5C,QAwDvBK,mBArDuB,SAACgC,GAC1Bd,EAAac,EAAMO,OAAO5C,QAoDgBO,gBAjDpB,SAAC8B,GACvBb,EAAUa,EAAMO,OAAO5C,UAiDpBgB,EAAMmC,KAAI,SAAA/E,GAAI,OACb,kBAAC,EAAD,CAAMgF,IAAKhF,EAAKkB,GAAIlB,KAAMA,UC1IlCiF,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3d884a6e.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author} \r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {  token = `bearer ${newToken}`}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const config = {    \n    headers: { Authorization: token },  \n}\n  const response = await axios.post(baseUrl, newObject, config)  \n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst BlogForm = (props) =>\n<form onSubmit={props.addBlog}>\n<div>\n  title: <input value={props.newTitle}\n  onChange={props.handleTitleChange} />\n</div>\n<div>\n  author: <input value={props.newAuthor}\n  onChange={props.handleAuthorChange} />\n</div>\n<div>\n<div>\n  url: <input value={props.newUrl}\n  onChange={props.handleUrlChange} />\n</div>\n<div></div>\n  <button type=\"submit\">create</button>\n</div>\n</form>\n\nexport default BlogForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    console.log(message)\n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogService'\nimport loginService from './services/loginService'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport './App.css'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')   \n  const [password, setPassword] = useState('') \n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const [message, setMessage] = useState('some message here...')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {    \n    const loggedUserJSON = window.localStorage.getItem('loggedUser')    \n  if (loggedUserJSON) {      \n    const user = JSON.parse(loggedUserJSON)      \n    setUser(user)      \n    blogService.setToken(user.token)    \n  }  \n}, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    }\n\n    blogService\n    .create(blogObject)\n\n      \n    .then(res => {\n      setBlogs(blogs.concat(res))\n      setNewTitle('')\n      setNewAuthor('')\n      setNewUrl('')\n      setMessage(`a new blog '${blogObject.title}' added`)\n      setTimeout(()=> {\n        setMessage(null)\n      }, 5000)\n    })\n    \n  }\n\n  const handleLogin = async (event) => {    \n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(        \n        'loggedUser', JSON.stringify(user)      ) \n\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setMessage('wrong credentials')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const handleLogout = (event) => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  if (user === null) {\n      return (\n        <div>\n          <h2>Log in to application</h2>\n          <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>      \n        </div>\n      )\n    }\n\n     \n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} />\n      {user.name} logged in\n      <button onClick={()=>handleLogout()}>logout</button> \n      <br></br><br></br>\n      <h2>create new</h2>\n      <BlogForm addBlog={addBlog} newTitle={newTitle} \n      newAuthor={newAuthor} newUrl={newUrl} handleTitleChange={handleTitleChange}\n      handleAuthorChange={handleAuthorChange} handleUrlChange={handleUrlChange} />\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}