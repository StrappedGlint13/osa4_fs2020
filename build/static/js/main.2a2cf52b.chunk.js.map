{"version":3,"sources":["components/Togglable.js","components/Blog.js","services/blogService.js","services/loginService.js","components/BlogForm.js","components/Notification.js","components/Error.js.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","Blog","blog","addLike","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","url","likes","user","username","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","BlogForm","addBlog","handleAuthorChange","handleTitleChange","handleUrlChange","newTitle","newAuthor","newUrl","onSubmit","value","onChange","type","Notification","message","console","log","className","Error","error","App","blogs","setBlogs","setUsername","password","setPassword","setNewTitle","setNewAuthor","setNewUrl","blogFormRef","useRef","setMessage","setError","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","name","target","removeItem","blogObject","current","res","concat","map","key","find","n","changedBlog","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a2cf52b.chunk.js","sourcesContent":["\nimport React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {    \n      return {      \n          toggleVisibility    \n        }  \n    })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import React from 'react'\r\nimport Togglable from './Togglable'\r\n\r\nconst Blog = ({ blog, addLike }) => {\r\n  const blogStyle = {\r\n  paddingTop: 10,\r\n  paddingLeft: 2,\r\n  border: 'solid',\r\n  borderWidth: 1,\r\n  marginBottom: 5\r\n}\r\n\r\nreturn (\r\n  <div style={blogStyle}>\r\n  <div>\r\n    {blog.title} {blog.author} \r\n    <Togglable buttonLabel=\"view\" >\r\n      {blog.url}\r\n      <br></br>\r\n      likes {blog.likes}\r\n      <button onClick={addLike}>like</button>\r\n      <br></br>\r\n      {blog.user.username}\r\n    </Togglable>\r\n  </div>\r\n  </div>\r\n)}\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {  token = `bearer ${newToken}`}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const config = {    \n    headers: { Authorization: token },  \n}\n  const response = await axios.post(baseUrl, newObject, config)  \n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl} /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst BlogForm = ({\n    addBlog,\n    handleAuthorChange,\n    handleTitleChange,\n    handleUrlChange,\n    newTitle,\n    newAuthor,\n    newUrl\n}) =>\n<form onSubmit={addBlog}>\n<div>\n  title: <input value={newTitle}\n  onChange={handleTitleChange} />\n</div>\n<div>\n  author: <input value={newAuthor}\n  onChange={handleAuthorChange} />\n</div>\n<div>\n<div>\n  url: <input value={newUrl}\n  onChange={handleUrlChange} />\n</div>\n<div></div>\n  <button type=\"submit\">create</button>\n</div>\n</form>\n\nexport default BlogForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    console.log(message)\n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n\n\nexport default Notification","import React from 'react'\n\nconst Error = ({ error }) => {\n    if (error === null) {\n      return null\n    }\n\n    return (\n      <div className=\"error\">\n        {error}\n      </div>\n    )\n  }\n\n\nexport default Error","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogService'\nimport loginService from './services/loginService'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Error from './components/Error.js'\nimport './App.css'\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')   \n  const [password, setPassword] = useState('') \n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n  const blogFormRef= useRef()\n\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {    \n    const loggedUserJSON = window.localStorage.getItem('loggedUser')    \n  if (loggedUserJSON) {      \n    const user = JSON.parse(loggedUserJSON)      \n    setUser(user)      \n    blogService.setToken(user.token)    \n  }  \n}, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    }\n\n    blogFormRef.current.toggleVisibility()\n\n    blogService\n    .create(blogObject)\n\n      \n    .then(res => {\n      setBlogs(blogs.concat(res))\n      setNewTitle('')\n      setNewAuthor('')\n      setNewUrl('')\n      setMessage(`a new blog '${blogObject.title}' added`)\n      setTimeout(()=> {\n        setMessage(null)\n      }, 5000)\n    })\n    \n  }\n\n  const handleLogin = async (event) => {    \n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(        \n        'loggedUser', JSON.stringify(user)      ) \n\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setMessage(`Welcome ${user.username}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setError('invalid username or password')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addLike = (id) => {\n    const blog = blogs.find(n => n.id === id)\n    const changedBlog = {...blog, likes:  blog.likes + 1}\n\n    blogService.update(changedBlog.id, changedBlog)\n    .then(response => {\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : response))\n    })\n    .catch(error => {\n      setError('adding like failed')\n    })\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n\n\n  }\n\n  \n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const handleLogout = (event) => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  if (user === null) {\n      return (\n        <div>\n          <Error error={error} />\n          <h2>Log in to application</h2>\n          <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>      \n        </div>\n      )\n    }\n\n     \n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} />\n      {user.name} logged in\n      <button onClick={()=>handleLogout()}>logout</button> \n      <br></br>\n      <h2>create new</h2>\n      <Togglable buttonLabel='new note' ref={blogFormRef}>\n      <BlogForm addBlog={addBlog} newTitle={newTitle} \n      newAuthor={newAuthor} newUrl={newUrl} handleTitleChange={handleTitleChange}\n      handleAuthorChange={handleAuthorChange} handleUrlChange={handleUrlChange} />\n      </Togglable>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} addLike={() => addLike(blog.id)} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}